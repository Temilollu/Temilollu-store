{"version":3,"sources":["images/03192019-16.jpg","Components/cart-dropdown/cart-dropdown.jsx","redux/cart/cart-actions.js","Components/Header.jsx","Components/ShopPage.jsx","Components/Homepage.jsx","App.js","redux/shop/shop.action.js","redux/shop/shop-reducer.js","redux/cart/cart-utils.js","redux/cart/cart-reducer.js","redux/root-reducer.js","redux/store.js","index.js"],"names":["module","exports","connect","cartItems","cart","items","totalAmount","reduce","accumulator","price","quantity","dispatch","removedItem","remove","type","payload","removeFromCart","className","toFixed","length","map","item","key","id","src","image","alt","title","onClick","cartTotal","prevValue","cartItem","useState","toggle","setToggle","Logo","style","fontSize","cursor","position","prevState","width","height","viewBox","fill","xmlns","fillRule","d","cartCollection","datum","modifiedTitle","split","splice","join","state","data","shop","shopData","props","Spinner","animation","variant","role","shopAction","useEffect","a","fetch","response","json","fetchData","INITIAL_STATE","shopReducer","action","addToCart","cartArray","cartItemToAdd","find","cartItemToRemove","index","indexOf","show","cartReducer","combineReducers","middlewares","logger","store","createStore","rootReducer","applyMiddleware","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.6f687308.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/03192019-16.b3840a5d.jpg\";","import React from 'react';\r\nimport {connect} from 'react-redux'\r\nimport './cart-dropdown.styles.scss'\r\n\r\nimport  { removeFromCart } from '../../redux/cart/cart-actions'\r\nconst CartDropdown = ({items, removedItem, totalAmount}) => {\r\n\r\n    return ( \r\n        <div className=\"cart-dropdown\">\r\n          <p className=\"total\">Total : ${totalAmount.toFixed(2)}</p>\r\n          { !items.length && <p className=\"empty-cart\">No items in cart</p>}\r\n                {\r\n                    items.map(item => (\r\n                 <div className='cart-items' key={item.id}>\r\n                    <img src={item.image} alt=\"\"/>\r\n                    <div className=\"title_price\">\r\n                      <p>{item.title} <br/>\r\n                       ${item.price} x {item.quantity} </p>\r\n                    </div>\r\n                    <p className='price' onClick={() => removedItem(item)} >X</p>\r\n                    </div>\r\n                    ))\r\n                }\r\n                <button className=\"cart-dropdown__button\">Checkout</button>\r\n            </div>\r\n     );\r\n}\r\nconst mapStateToProps = ({cart : {cartItems}}) => ({\r\n    items :  cartItems,\r\n    totalAmount : cartItems.reduce((accumulator, cartItems) => {\r\n       return accumulator =  accumulator + cartItems.price * cartItems.quantity\r\n    },0)\r\n  })\r\n  \r\n  const mapDispatchToProps = dispatch => ({\r\n   removedItem  : remove => dispatch(removeFromCart(remove))\r\n\r\n  })\r\n \r\nexport default connect(mapStateToProps,mapDispatchToProps )(CartDropdown);","\r\n\r\nexport const cartAction = shop => ({\r\n    type : 'CART_ITEMS',\r\n    payload : shop\r\n})\r\n\r\nexport const removeFromCart = remove => ({\r\n    type : 'REMOVE_CART_ITEM',\r\n    payload : remove\r\n})\r\n","import React, {useState} from 'react';\r\nimport CartDropdown from './cart-dropdown/cart-dropdown'\r\nimport { connect } from 'react-redux'\r\nimport  Logo from  '../images/03192019-16.jpg'\r\n\r\nconst Header = ({cartTotal}) => {\r\n        const [toggle, setToggle] = useState(false)\r\n       const handleClick = () =>{\r\n         setToggle( prevState => !prevState)\r\n       }\r\n\r\n    return ( \r\n            <nav>\r\n              <main>\r\n               {/* <h1 >T Store</h1> */}\r\n               <img src={Logo} alt=\"\" className=\"img-fluid logo\"/>\r\n                  <div style={{fontSize : '42px', cursor : 'pointer', position : 'relative'}} onClick={handleClick} >\r\n                    <span className=\"count-total\">{cartTotal} </span>\r\n                    <svg width=\"1em\" height=\"1em\" viewBox=\"0 0 16 16\" className=\"bi bi-cart2\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                    <path fillRule=\"evenodd\" d=\"M0 2.5A.5.5 0 0 1 .5 2H2a.5.5 0 0 1 .485.379L2.89 4H14.5a.5.5 0 0 1 .485.621l-1.5 6A.5.5 0 0 1 13 11H4a.5.5 0 0 1-.485-.379L1.61 3H.5a.5.5 0 0 1-.5-.5zM3.14 5l1.25 5h8.22l1.25-5H3.14zM5 13a1 1 0 1 0 0 2 1 1 0 0 0 0-2zm-2 1a2 2 0 1 1 4 0 2 2 0 0 1-4 0zm9-1a1 1 0 1 0 0 2 1 1 0 0 0 0-2zm-2 1a2 2 0 1 1 4 0 2 2 0 0 1-4 0z\"/>\r\n                    </svg> </div>\r\n                  { toggle &&  <CartDropdown/>} \r\n                  </main>\r\n            </nav>\r\n     );\r\n}\r\n \r\nconst mapStateToProps = ({cart : {cartItems}}) => ({\r\n  cartTotal : cartItems.reduce((prevValue, cartItem) => {\r\n      return prevValue = prevValue + cartItem.quantity\r\n  },0)\r\n})\r\n\r\n\r\nexport default connect(mapStateToProps)(Header);","import React from 'react';\r\n import {connect} from 'react-redux'\r\nimport { cartAction } from '../redux/cart/cart-actions'\r\nconst ShopPage = ({datum, cartCollection}) => {\r\n  const { title } = datum\r\n   const modifiedTitle =  title.split(' ').splice(0,7).join(' ')\r\n\r\n    return ( \r\n        <div className=\"col mb-4\">\r\n        <div className=\"card\">\r\n          <img src={datum.image} className=\"card-img-top img-fluid shop-image\" alt=\"...\"/>\r\n          <div className=\"card-body\">\r\n           <p>{modifiedTitle}</p>\r\n           <div className=\"price_button\">\r\n              <p>${datum.price}</p>\r\n            <button onClick={() => cartCollection(datum)}>Add to cart</button>\r\n           </div>\r\n           \r\n          </div>\r\n        </div>\r\n      </div>\r\n     );\r\n}\r\nconst mapDispatchToProps = dispatch => ({\r\n    cartCollection : cart => dispatch(cartAction(cart))\r\n})\r\n \r\nexport default connect(null,mapDispatchToProps)(ShopPage);   \r\n","import React from 'react';\r\nimport Spinner from 'react-bootstrap/Spinner'\r\nimport { connect } from 'react-redux'\r\nimport ShopPage from './ShopPage'\r\n\r\nconst Homepage = (props) => {\r\n   const  { data } = props\r\n   data.splice(18, 20)\r\n    return ( \r\n    <div>\r\n        { !data.length &&  <Spinner animation=\"border\" variant=\"danger\" role=\"status\"><span className=\"sr-only\">Loading...</span> </Spinner>  }    \r\n        <div className=\"row row-cols-1 row-cols-md-3 overall-container\">\r\n            { data.map( datum => <ShopPage key={datum.id} datum={datum} />)}  \r\n        </div>\r\n    </div>\r\n     );\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  data : state.shop.shopData\r\n})\r\n \r\nexport default connect(mapStateToProps)(Homepage);","import React, { useEffect } from 'react';\nimport { connect } from 'react-redux'\n\n\nimport  Header from './Components/Header';\nimport Homepage from './Components/Homepage'\n\nimport {shopAction}from './redux/shop/shop.action'\nimport './App.css';\n\n\nfunction App(props) {\n  const { shopData } = props\n//  const [data, setData]  = useState('')\n  useEffect(() => {\n   async function fetchData (){\n   const response =  await fetch('https://fakestoreapi.com/products/')\n   const data =  await   response.json()\n   shopData(data)\n   }\n    fetchData()\n  }, [])\n\n  return (\n    <div>\n       <Header/>\n      <Homepage/> \n      \n    </div>\n  );\n}\n\nconst mapDispatchToDrops = dispatch => ({\n  shopData : shop => dispatch(shopAction(shop)) \n})\n\nexport default connect(null, mapDispatchToDrops)(App);\n","\r\n\r\nexport const shopAction = shop => ({\r\n    type : 'GET_SHOP_DATA',\r\n    payload : shop\r\n})","\r\nconst INITIAL_STATE = {\r\n   shopData : [] \r\n}\r\n\r\n const shopReducer = (state = INITIAL_STATE, action) => {\r\n       switch (action.type) {\r\n           case 'GET_SHOP_DATA':\r\n               return {\r\n                   ...state,\r\n                   shopData : action.payload\r\n               }\r\n           default:\r\n           return state\r\n       }\r\n   }\r\n\r\n   export default shopReducer","\r\n export const addToCart = (cartArray, cartItemToAdd ) => {\r\n     const existingCartItem = cartArray.find(\r\n      cartItem => cartItem.id === cartItemToAdd.id \r\n      )\r\n      if(existingCartItem){\r\n          return cartArray.map( cartItem => \r\n            cartItem.id === cartItemToAdd.id ?\r\n            {...cartItem, quantity : cartItem.quantity + 1}\r\n            : cartItem\r\n          )\r\n      }\r\n   \r\n      \r\n       return  [...cartArray, {...cartItemToAdd, quantity : 1}]\r\n}\r\n\r\nexport const removeFromCart = (cartItems, cartItemToRemove) => {\r\n   const index = cartItems.indexOf(cartItemToRemove)\r\n   cartItems.splice(index,1)\r\n   return cartItems\r\n}","import { addToCart, removeFromCart } from './cart-utils'\r\n\r\nconst INITIAL_STATE = {\r\n    cartItems : [] ,\r\n    show : false\r\n }\r\n \r\n  const cartReducer = (state = INITIAL_STATE, action) => {\r\n        switch (action.type) {\r\n            case 'CART_ITEMS':\r\n                return {\r\n                    ...state,\r\n                    cartItems : addToCart([...state.cartItems], action.payload)  \r\n                }\r\n                case 'REMOVE_CART_ITEM': \r\n                return {\r\n                    ...state,\r\n                   cartItems : removeFromCart([...state.cartItems], action.payload)  \r\n                }\r\n            default:\r\n            return state\r\n        }\r\n    }\r\n \r\n    export default cartReducer\r\n","import { combineReducers } from 'redux'\r\nimport shopReducer from './shop/shop-reducer'\r\nimport cartReducer from './cart/cart-reducer'\r\n\r\nexport default combineReducers({\r\n    shop : shopReducer,\r\n    cart : cartReducer\r\n})\r\n","import { createStore , applyMiddleware } from 'redux';\r\nimport logger from 'redux-logger'\r\n\r\nimport rootReducer from './root-reducer'\r\n\r\nconst middlewares = [logger]\r\n\r\nconst store  = createStore(rootReducer, applyMiddleware(...middlewares))\r\n\r\nexport default store","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport { Provider } from 'react-redux'\nimport App from './App';\nimport store from './redux/store'\n\nReactDOM.render(\n    <Provider  store={store}>\n        <App />\n    </Provider>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}